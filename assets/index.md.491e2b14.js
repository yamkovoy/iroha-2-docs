import{_ as e,o as a,c as t,V as o}from"./chunks/framework.7726510e.js";const f=JSON.parse('{"title":"Iroha 2 Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","lastUpdated":1692001131000}'),r={name:"index.md"},i=o('<h1 id="iroha-2-documentation" tabindex="-1">Iroha 2 Documentation <a class="header-anchor" href="#iroha-2-documentation" aria-label="Permalink to &quot;Iroha 2 Documentation&quot;">​</a></h1><p>Iroha is a fully-featured <a href="./guide/glossary.html#blockchain-ledgers">blockchain ledger</a>. With Iroha you can:</p><ul><li>Create and manage custom <a href="./guide/glossary.html#fungible-assets">fungible assets</a>, such as currencies, gold, and others</li><li>Create and manage <a href="./guide/glossary.html#non-fungible-assets">non-fungible</a> assets</li><li>Manage user accounts with a domain hierarchy and multi-signature transactions</li><li>Use efficient portable smart contracts implemented either via <a href="./guide/blockchain/wasm.html">WebAssembly</a> or <a href="./guide/blockchain/instructions.html">Iroha Special Instructions</a></li><li>Use both permissioned and permission-less blockchain deployments</li></ul><h2 id="how-iroha-works" tabindex="-1">How Iroha works <a class="header-anchor" href="#how-iroha-works" aria-label="Permalink to &quot;How Iroha works&quot;">​</a></h2><p>To understand how Iroha operates, let&#39;s draw parallels between a blockchain and a computer. If the blockchain is the computer, then in this metaphor of ours the client binary (for example: <a href="./guide/bash.html"><code>iroha_client_cli</code></a>) is the keyboard, the blockchain is the hard drive, and the Iroha peer software is the processor. Like a processor, Iroha accepts portable instructions that modify what&#39;s written to the blockchain, allow certain users to use the network, and lock others out.</p><p>Any operation that is run on-chain is written in terms of <a href="./guide/blockchain/instructions.html">Iroha Special Instructions (ISI)</a>, and there is no other way of modifying the world state.</p><p>Each interaction with the blockchain is done via a <em>transaction</em>. A transaction is a collection of <em>instructions</em>, which are either glued together in sequence or compiled into what we affectionately call a <a href="./guide/blockchain/wasm.html">WASM</a> blob. You need these instructions to register an account, remove an account, add X amount of Y currency, and so on.</p><p>To read the information encoded in the blocks of a blockchain (the current world state), you use <a href="./guide/blockchain/queries.html">queries</a>. Queries are submitted like instructions, but they&#39;re not tracked and recorded in blocks, so they&#39;re much more lightweight. If you use queries as part of complicated logic (e.g. inside WASM), they have a non-negligible impact on the size of the blocks. Queries that are only used to get information leave no trace in the blockchain.</p><h2 id="navigation" tabindex="-1">Navigation <a class="header-anchor" href="#navigation" aria-label="Permalink to &quot;Navigation&quot;">​</a></h2><p>If you have previously worked with Iroha, start with our comparison of <a href="./guide/iroha-2.html">Iroha 1 and Iroha 2</a>. That will help you understand the differences between the two versions and upgrade to the newer one.</p><p>Check the <a href="./guide/intro.html">tutorial</a> part of this documentation where you can follow one of the available language-specific guides in <a href="./guide/bash.html">Bash</a>, <a href="./guide/rust.html">Rust</a>, <a href="./guide/kotlin-java.html">Kotlin</a>, <a href="./guide/javascript.html">Javascript</a>, or <a href="./guide/python.html">Python</a>. The guides introduce you to the basic concepts and provide code snippets that you can run yourself.</p><p>In the Blockchain chapter you can find documentation for Iroha features, such as <a href="./guide/blockchain/instructions.html">Iroha Special Instructions</a>, <a href="./guide/blockchain/triggers.html">triggers</a>, <a href="./guide/blockchain/queries.html">queries</a>.</p><p>The Configuration and Management section explains Iroha 2 configuration files in greater detail and covers topics such as <a href="./guide/configure/keys.html">public key cryptography</a>, <a href="./guide/configure/peer-management.html">peer management</a>, and <a href="./guide/configure/modes.html">public and private modes</a>.</p><h2 id="learn-more" tabindex="-1">Learn More <a class="header-anchor" href="#learn-more" aria-label="Permalink to &quot;Learn More&quot;">​</a></h2><p>For more information on Iroha 2, please take a look at the <a href="https://github.com/hyperledger/iroha/blob/iroha2/docs/source/iroha_2_whitepaper.md" target="_blank" rel="noreferrer">Iroha 2 Whitepaper</a>, as well as the Hyperledger Iroha section within the <a href="https://wiki.hyperledger.org/display/iroha" target="_blank" rel="noreferrer">Hyperledger Foundation Wiki</a>.</p><p>For more information on Iroha 1, take a look at the <a href="https://iroha.readthedocs.io/en/develop/index.html" target="_blank" rel="noreferrer">Iroha 1 documentation</a>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you want to contribute to Hyperledger Iroha, please look at our <a href="https://github.com/hyperledger/iroha/blob/iroha2-dev/CONTRIBUTING.md" target="_blank" rel="noreferrer">Contributing Guide</a>.</p></div>',17),n=[i];function h(s,c,l,d,u,p){return a(),t("div",null,n)}const g=e(r,[["render",h]]);export{f as __pageData,g as default};
