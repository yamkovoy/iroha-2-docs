import{u as o,o as t,c as a,C as s,a as e,t as r,b as l,V as p}from"./chunks/framework.7726510e.js";const c=s("h1",{id:"api-specification",tabindex:"-1"},[e("API Specification "),s("a",{class:"header-anchor",href:"#api-specification","aria-label":'Permalink to "API Specification"'},"​")],-1),i={class:"info custom-block"},d=s("p",{class:"custom-block-title"},"INFO",-1),u=s("p",null,[e("This page contains a copy of "),s("code",null,"api_spec.md"),e(" from "),s("code",null,"hyperledger/iroha#iroha2-dev"),e(". You can read the most up-to-date version of it on "),s("a",{href:"https://github.com/hyperledger/iroha/blob/iroha2-dev/docs/source/references/api_spec.md",target:"_blank",rel:"noreferrer"},"GitHub"),e(".")],-1),h=p(`<h2 id="endpoints-for-api" tabindex="-1">Endpoints for API <a class="header-anchor" href="#endpoints-for-api" aria-label="Permalink to &quot;Endpoints for API&quot;">​</a></h2><h3 id="transaction" tabindex="-1">Transaction <a class="header-anchor" href="#transaction" aria-label="Permalink to &quot;Transaction&quot;">​</a></h3><p><strong>Protocol</strong>: HTTP</p><p><strong>Encoding</strong>: <a href="#parity-scale-codec">Parity Scale Codec</a></p><p><strong>Endpoint</strong>: <code>/transaction</code></p><p><strong>Method</strong>: <code>POST</code></p><p><strong>Expects</strong>: Body: <a href="#iroha-structures"><code>VersionedSignedTransaction</code></a></p><p><strong>Responses</strong>:</p><table><thead><tr><th>Status</th><th>Description</th></tr></thead><tbody><tr><td>200</td><td>Transaction Accepted (But not guaranteed to have passed consensus yet)</td></tr><tr><td>400</td><td>Transaction Rejected (Malformed)</td></tr><tr><td>401</td><td>Transaction Rejected (Improperly signed)</td></tr></tbody></table><h3 id="query" tabindex="-1">Query <a class="header-anchor" href="#query" aria-label="Permalink to &quot;Query&quot;">​</a></h3><p><strong>Protocol</strong>: HTTP</p><p><strong>Encoding</strong>: <a href="#parity-scale-codec">Parity Scale Codec</a></p><p><strong>Endpoint</strong>: <code>/query</code></p><p><strong>Method</strong>: <code>POST</code></p><p><strong>Expects</strong>:</p><ul><li>Body: <a href="#iroha-structures"><code>VersionedSignedQueryRequest</code></a></li><li>Query parameters: <ul><li><code>start</code>: Optional parameter in queries where results can be indexed. Use to return results from specified point. Results are ordered where can be by id which uses rust&#39;s <a href="https://doc.rust-lang.org/std/cmp/trait.PartialOrd.html#derivable" target="_blank" rel="noreferrer">PartialOrd</a> and <a href="https://doc.rust-lang.org/std/cmp/trait.Ord.html" target="_blank" rel="noreferrer">Ord</a> traits.</li><li><code>limit</code>: Optional parameter in queries where results can be indexed. Use to return specific number of results.</li><li><code>sort_by_metadata_key</code>: Optional parameter in queries. Use to sort results containing metadata with a given key.</li></ul></li></ul><p><strong>Responses</strong>:</p><table><thead><tr><th>Response</th><th>Status</th><th><a href="#iroha-structures">Body</a></th></tr></thead><tbody><tr><td>Decode err.</td><td>400</td><td><code>QueryError::Decode(Box&lt;iroha_version::error::Error&gt;)</code></td></tr><tr><td>Signature err.</td><td>401</td><td><code>QueryError::Signature(String)</code></td></tr><tr><td>Permission err.</td><td>403</td><td><code>QueryError::Permission(String)</code></td></tr><tr><td>Evaluate err.</td><td>400</td><td><code>QueryError::Evaluate(String)</code></td></tr><tr><td>Find err.</td><td>404</td><td><code>QueryError::Find(Box&lt;FindError&gt;)</code></td></tr><tr><td>Conversion err.</td><td>400</td><td><code>QueryError::Conversion(String)</code></td></tr><tr><td>Success</td><td>200</td><td><code>VersionedPaginatedQueryResult</code></td></tr></tbody></table><h4 id="account-not-found-404" tabindex="-1">Account Not Found 404 <a class="header-anchor" href="#account-not-found-404" aria-label="Permalink to &quot;Account Not Found 404&quot;">​</a></h4><p>Whether each prerequisite object was found and <code>FindError</code>:</p><table><thead><tr><th>Domain</th><th>Account</th><th><code>FindError</code></th></tr></thead><tbody><tr><td>N</td><td>-</td><td><code>FindError::Domain(DomainId)</code></td></tr><tr><td>Y</td><td>N</td><td><code>FindError::Account(AccountId)</code></td></tr></tbody></table><h4 id="asset-not-found-404" tabindex="-1">Asset Not Found 404 <a class="header-anchor" href="#asset-not-found-404" aria-label="Permalink to &quot;Asset Not Found 404&quot;">​</a></h4><p>Whether each prerequisite object was found and <code>FindError</code>:</p><table><thead><tr><th>Domain</th><th>Account</th><th>Asset Definition</th><th>Asset</th><th><code>FindError</code></th></tr></thead><tbody><tr><td>N</td><td>-</td><td>-</td><td>-</td><td><code>FindError::Domain(DomainId)</code></td></tr><tr><td>Y</td><td>N</td><td>-</td><td>-</td><td><code>FindError::Account(AccountId)</code></td></tr><tr><td>Y</td><td>-</td><td>N</td><td>-</td><td><code>FindError::AssetDefinition(AssetDefinitionId)</code></td></tr><tr><td>Y</td><td>Y</td><td>Y</td><td>N</td><td><code>FindError::Asset(AssetId)</code></td></tr></tbody></table><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h3><p><strong>Protocol</strong>: HTTP</p><p><strong>Protocol Upgrade</strong>: <code>WebSocket</code></p><p><strong>Encoding</strong>: <a href="#parity-scale-codec">Parity Scale Codec</a></p><p><strong>Endpoint</strong>: <code>/events</code></p><p><strong>Communication</strong>:</p><p>After handshake, client should send <a href="#iroha-structures"><code>VersionedEventSubscriptionRequest</code></a>. Then server sends <a href="#iroha-structures"><code>VersionedEventMessage</code></a>.</p><p><strong>Notes</strong>:</p><p>Usually, the client waits for Transaction events.</p><p>Transaction event statuses can be either <code>Validating</code>, <code>Committed</code> or <code>Rejected</code>.</p><p>Transaction statuses proceed from <code>Validating</code> to either <code>Committed</code> or <code>Rejected</code>. However, due to the distributed nature of the network, some peers might receive events out of order (e.g. <code>Committed</code> before <code>Validating</code>).</p><p>It&#39;s possible that some peers in the network are offline for the validation round. If the client connects to them while they are offline, the peers might not respond with the <code>Validating</code> status. But when the offline peers come back online they will synchronize the blocks. They are then guaranteed to respond with the <code>Committed</code> (or <code>Rejected</code>) status depending on the information found in the block.</p><h3 id="pending-transactions" tabindex="-1">Pending Transactions <a class="header-anchor" href="#pending-transactions" aria-label="Permalink to &quot;Pending Transactions&quot;">​</a></h3><p><strong>Protocol</strong>: HTTP</p><p><strong>Encoding</strong>: <a href="#parity-scale-codec">Parity Scale Codec</a></p><p><strong>Endpoint</strong>: <code>/pending_transactions</code></p><p><strong>Method</strong>: <code>GET</code></p><p><strong>Expects</strong>:</p><p><em>Internal use only.</em> Returns the transactions pending at the moment.</p><h3 id="blocks-stream" tabindex="-1">Blocks Stream <a class="header-anchor" href="#blocks-stream" aria-label="Permalink to &quot;Blocks Stream&quot;">​</a></h3><p><strong>Protocol</strong>: HTTP</p><p><strong>Protocol Upgrade</strong>: <code>WebSocket</code></p><p><strong>Encoding</strong>: <a href="#parity-scale-codec">Parity Scale Codec</a></p><p><strong>Endpoint</strong>: <code>/block/stream</code></p><p><strong>Communication</strong>:</p><p>Client should send <a href="#iroha-structures"><code>VersionedBlockSubscriptionRequest</code></a> to initiate communication after WebSocket handshake. Then server sends <a href="#iroha-structures"><code>VersionedBlockMessage</code></a>.</p><p><strong>Notes</strong>:</p><p>Via this endpoint client first provides the starting block number (i.e. height) in the subscription request. After sending the confirmation message, server starts streaming all the blocks from the given block number up to the current block and continues to stream blocks as they are added to the blockchain.</p><h3 id="get-configuration" tabindex="-1">Get Configuration <a class="header-anchor" href="#get-configuration" aria-label="Permalink to &quot;Get Configuration&quot;">​</a></h3><p><strong>Protocol</strong>: HTTP</p><p><strong>Encoding</strong>: JSON</p><p><strong>Endpoint</strong>: <code>/configuration</code></p><p><strong>Method</strong>: <code>GET</code></p><p><strong>Expects</strong>: There are 2 options:</p><ul><li>Expects: a JSON body <code>&quot;Value&quot;</code>. Returns: configuration value as JSON.</li><li>Expects: a JSON body that specifies the field (see example below). Returns: documentation for a specific field (as JSON string) or <code>null</code>.</li></ul><p>Note that if the requested field has more fields inside of it, then all the documentation for its inner members is returned as well. Here is an example for getting a field <code>a.b.c</code>:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#ADBAC7;">{</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#8DDB8C;">&quot;Docs&quot;</span><span style="color:#ADBAC7;">: [</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#96D0FF;">&quot;a&quot;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#96D0FF;">&quot;b&quot;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#96D0FF;">&quot;c&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">  ]</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre></div><p><strong>Examples</strong>: To get the top-level configuration docs for [<code>Torii</code>] and all the fields within it:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#F69D50;">curl</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">-X</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">GET</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">-H</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;content-type: application/json&#39;</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">http://127.0.0.1:</span><span style="color:#6CB6FF;">8080</span><span style="color:#96D0FF;">/configuration</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">-d</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;{&quot;Docs&quot; : [&quot;torii&quot;]} &#39;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">-i</span></span></code></pre></div><p><strong>Responses</strong>:</p><ul><li>200 OK: Field was found and either doc or value is returned in json body.</li><li>404 Not Found: Field wasn&#39;t found</li></ul><h3 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h3><p><strong>Protocol</strong>: HTTP</p><p><strong>Encoding</strong>: JSON</p><p><strong>Endpoint</strong>: <code>/configuration</code></p><p><strong>Method</strong>: <code>POST</code></p><p><strong>Expects</strong>: One configuration option is currently supported: <code>LogLevel</code>. It is set to the log-level in uppercase.</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#ADBAC7;">{</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#8DDB8C;">&quot;LogLevel&quot;</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">&quot;WARN&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre></div><p>Acceptable values are <code>TRACE</code>, <code>DEBUG</code>, <code>INFO</code>, <code>WARN</code>, <code>ERROR</code>, corresponding to the <a href="https://github.com/hyperledger/iroha/tree/726f5eabf65a79ea618b4fce62a09cee7a5b13d1/docs/source/references/config.md#loggermaxloglevel" target="_blank" rel="noreferrer">respective configuration options</a>.</p><p><strong>Responses</strong>:</p><ul><li>200 OK: Log level has changed successfully. The confirmed new log level is returned in the body.</li><li>400 Bad Request: request body malformed.</li><li>500 Internal Server Error: Request body valid, but changing the log level failed (lock contention).</li></ul><h3 id="health" tabindex="-1">Health <a class="header-anchor" href="#health" aria-label="Permalink to &quot;Health&quot;">​</a></h3><p><strong>Protocol</strong>: HTTP</p><p><strong>Encoding</strong>: JSON</p><p><strong>Endpoint</strong>: <code>/health</code></p><p><strong>Method</strong>: <code>GET</code></p><p><strong>Expects</strong>: -</p><p><strong>Responses</strong>:</p><ul><li>200 OK: The peer is up. Also returns current status of peer in json string:</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#adbac7;">&quot;Healthy&quot;</span></span></code></pre></div><h2 id="endpoints-for-status-metrics" tabindex="-1">Endpoints for Status/Metrics <a class="header-anchor" href="#endpoints-for-status-metrics" aria-label="Permalink to &quot;Endpoints for Status/Metrics&quot;">​</a></h2><h3 id="status" tabindex="-1">Status <a class="header-anchor" href="#status" aria-label="Permalink to &quot;Status&quot;">​</a></h3><p><strong>Protocol</strong>: HTTP</p><p><strong>Encoding</strong>: JSON</p><p><strong>Endpoint</strong>: <code>/status</code></p><p><strong>Method</strong>: <code>GET</code></p><p><strong>Expects</strong>: -</p><p><strong>Responses</strong>:</p><p>200 OK reports status as JSON:</p><div class="language-json5"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#768390;">// Note: while this snippet is JSON5 (for better readability),</span></span>
<span class="line"><span style="color:#768390;">//       the actual response is JSON</span></span>
<span class="line"><span style="color:#ADBAC7;">{</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">   * Number of connected peers, except for the reporting peer itself</span></span>
<span class="line"><span style="color:#768390;">   */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#96D0FF;">peers</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">   * Number of committed blocks (block height)</span></span>
<span class="line"><span style="color:#768390;">   */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#96D0FF;">blocks</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">   * Total number of accepted transactions</span></span>
<span class="line"><span style="color:#768390;">   */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#96D0FF;">txs_accepted</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">   * Total number of rejected transactions</span></span>
<span class="line"><span style="color:#768390;">   */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#96D0FF;">txs_rejected</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">   * Uptime with nanosecond precision since creation of the genesis block</span></span>
<span class="line"><span style="color:#768390;">   */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#96D0FF;">uptime</span><span style="color:#ADBAC7;">: {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#96D0FF;">secs</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#96D0FF;">nanos</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">937000000</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">  },</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">   * Number of view changes in the current round</span></span>
<span class="line"><span style="color:#768390;">   */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#96D0FF;">view_changes</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre></div><p><strong>CAUTION</strong>: Almost all fields are 64-bit integers and should be handled with care in JavaScript. Only the <code>nanos</code> field is a 32-bit integer. See <code>iroha_telemetry::metrics::Status</code>.</p><p><strong>Sub-routing</strong>: To obtain the value of a specific field, one can append the name of the field to the path, e.g. <code>status/peers</code>. This returns the corresponding JSON value, inline, so strings are quoted, numbers are not and maps are presented as above.</p><h3 id="metrics" tabindex="-1">Metrics <a class="header-anchor" href="#metrics" aria-label="Permalink to &quot;Metrics&quot;">​</a></h3><p><strong>Protocol</strong>: HTTP</p><p><strong>Encoding</strong>: Prometheus</p><p><strong>Endpoint</strong>: <code>/metrics</code></p><p><strong>Method</strong>: <code>GET</code></p><p><strong>Expects</strong>: -</p><p><strong>Responses</strong>:</p><ul><li>200 OK reports 8 of 10 metrics:</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#768390;"># HELP accounts User accounts registered at this time</span></span>
<span class="line"><span style="color:#768390;"># TYPE accounts gauge</span></span>
<span class="line"><span style="color:#F69D50;">accounts</span><span style="color:#ADBAC7;">{domain</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;genesis&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span></span>
<span class="line"><span style="color:#F69D50;">accounts</span><span style="color:#ADBAC7;">{domain</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;wonderland&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span></span>
<span class="line"><span style="color:#768390;"># HELP block_height Current block height</span></span>
<span class="line"><span style="color:#768390;"># TYPE block_height counter</span></span>
<span class="line"><span style="color:#F69D50;">block_height</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span></span>
<span class="line"><span style="color:#768390;"># HELP connected_peers Total number of currently connected peers</span></span>
<span class="line"><span style="color:#768390;"># TYPE connected_peers gauge</span></span>
<span class="line"><span style="color:#F69D50;">connected_peers</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span></span>
<span class="line"><span style="color:#768390;"># HELP domains Total number of domains</span></span>
<span class="line"><span style="color:#768390;"># TYPE domains gauge</span></span>
<span class="line"><span style="color:#F69D50;">domains</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">2</span></span>
<span class="line"><span style="color:#768390;"># HELP tx_amount average amount involved in a transaction on this peer</span></span>
<span class="line"><span style="color:#768390;"># TYPE tx_amount histogram</span></span>
<span class="line"><span style="color:#F69D50;">tx_amount_bucket</span><span style="color:#ADBAC7;">{le</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;0.005&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span></span>
<span class="line"><span style="color:#F69D50;">tx_amount_bucket</span><span style="color:#ADBAC7;">{le</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;0.01&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span></span>
<span class="line"><span style="color:#F69D50;">tx_amount_bucket</span><span style="color:#ADBAC7;">{le</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;0.025&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span></span>
<span class="line"><span style="color:#F69D50;">tx_amount_bucket</span><span style="color:#ADBAC7;">{le</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;0.05&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span></span>
<span class="line"><span style="color:#F69D50;">tx_amount_bucket</span><span style="color:#ADBAC7;">{le</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;0.1&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span></span>
<span class="line"><span style="color:#F69D50;">tx_amount_bucket</span><span style="color:#ADBAC7;">{le</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;0.25&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span></span>
<span class="line"><span style="color:#F69D50;">tx_amount_bucket</span><span style="color:#ADBAC7;">{le</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;0.5&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span></span>
<span class="line"><span style="color:#F69D50;">tx_amount_bucket</span><span style="color:#ADBAC7;">{le</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;1&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span></span>
<span class="line"><span style="color:#F69D50;">tx_amount_bucket</span><span style="color:#ADBAC7;">{le</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;2.5&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span></span>
<span class="line"><span style="color:#F69D50;">tx_amount_bucket</span><span style="color:#ADBAC7;">{le</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;5&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span></span>
<span class="line"><span style="color:#F69D50;">tx_amount_bucket</span><span style="color:#ADBAC7;">{le</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;10&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span></span>
<span class="line"><span style="color:#F69D50;">tx_amount_bucket</span><span style="color:#ADBAC7;">{le</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;+Inf&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">2</span></span>
<span class="line"><span style="color:#F69D50;">tx_amount_sum</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">26</span></span>
<span class="line"><span style="color:#F69D50;">tx_amount_count</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">2</span></span>
<span class="line"><span style="color:#768390;"># HELP txs Transactions committed</span></span>
<span class="line"><span style="color:#768390;"># TYPE txs counter</span></span>
<span class="line"><span style="color:#F69D50;">txs</span><span style="color:#ADBAC7;">{type</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;accepted&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span></span>
<span class="line"><span style="color:#F69D50;">txs</span><span style="color:#ADBAC7;">{type</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;rejected&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span></span>
<span class="line"><span style="color:#F69D50;">txs</span><span style="color:#ADBAC7;">{type</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;total&quot;}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span></span>
<span class="line"><span style="color:#768390;"># HELP uptime_since_genesis_ms Network up-time, from creation of the genesis block</span></span>
<span class="line"><span style="color:#768390;"># TYPE uptime_since_genesis_ms gauge</span></span>
<span class="line"><span style="color:#F69D50;">uptime_since_genesis_ms</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">54572974</span></span>
<span class="line"><span style="color:#768390;"># HELP view_changes Number of view_changes in the current round</span></span>
<span class="line"><span style="color:#768390;"># TYPE view_changes gauge</span></span>
<span class="line"><span style="color:#F69D50;">view_changes</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span></span></code></pre></div><p>Learn <a href="https://hyperledger.github.io/iroha-2-docs/guide/advanced/metrics.html" target="_blank" rel="noreferrer">how to use metrics</a>.</p><h3 id="api-version" tabindex="-1">API Version <a class="header-anchor" href="#api-version" aria-label="Permalink to &quot;API Version&quot;">​</a></h3><p><strong>Protocol</strong>: HTTP</p><p><strong>Encoding</strong>: JSON</p><p><strong>Endpoint</strong>: <code>/api_version</code></p><p><strong>Method</strong>: <code>GET</code></p><p><strong>Expects</strong>: -</p><p><strong>Responses</strong>:</p><ul><li>200 OK: The current version of API used by Iroha returned as a json string. Grabbed from the genesis block&#39;s version, so at least a minimal subnet of 4 peers should be running and the genesis be submitted at the time of request.</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed"><code><span class="line"><span style="color:#adbac7;">&quot;1&quot;</span></span></code></pre></div><h2 id="parity-scale-codec" tabindex="-1">Parity Scale Codec <a class="header-anchor" href="#parity-scale-codec" aria-label="Permalink to &quot;Parity Scale Codec&quot;">​</a></h2><p>For more information on codec check <a href="https://substrate.dev/docs/en/knowledgebase/advanced/codec" target="_blank" rel="noreferrer">Substrate Dev Hub</a> and codec&#39;s <a href="https://github.com/paritytech/parity-scale-codec" target="_blank" rel="noreferrer">GitHub repository</a>.</p><h2 id="reference-iroha-client-implementation" tabindex="-1">Reference Iroha Client Implementation <a class="header-anchor" href="#reference-iroha-client-implementation" aria-label="Permalink to &quot;Reference Iroha Client Implementation&quot;">​</a></h2><p><a href="https://github.com/hyperledger/iroha/tree/726f5eabf65a79ea618b4fce62a09cee7a5b13d1/client" target="_blank" rel="noreferrer">Iroha client in Rust.</a></p><h2 id="iroha-structures" tabindex="-1">Iroha Structures <a class="header-anchor" href="#iroha-structures" aria-label="Permalink to &quot;Iroha Structures&quot;">​</a></h2><table><thead><tr><th>Object name</th><th>Fully qualified object name</th></tr></thead><tbody><tr><td><code>VersionedSignedTransaction</code></td><td><code>iroha_data_model::transaction::VersionedSignedTransaction</code></td></tr><tr><td><code>VersionedSignedQueryRequest</code></td><td><code>iroha_data_model::query::VersionedSignedQueryRequest</code></td></tr><tr><td><code>VersionedPaginatedQueryResult</code></td><td><code>iroha_data_model::query::VersionedPaginatedQueryResult</code></td></tr><tr><td><code>QueryError</code></td><td><code>iroha_core::smartcontracts::isi::query::Error</code></td></tr><tr><td><code>FindError</code></td><td><code>iroha_core::smartcontracts::isi::error::FindError</code></td></tr><tr><td><code>VersionedBlockSubscriptionRequest</code></td><td><code>iroha_core::block::stream::VersionedBlockSubscriptionRequest</code></td></tr><tr><td><code>VersionedBlockMessage</code></td><td><code>iroha_core::block::stream::VersionedBlockMessage</code></td></tr><tr><td><code>VersionedEventSubscriptionRequest</code></td><td><code>iroha_data_model::events::VersionedEventSubscriptionRequest</code></td></tr><tr><td><code>VersionedEventMessage</code></td><td><code>iroha_data_model::events::VersionedEventMessage</code></td></tr></tbody></table>`,121),F=JSON.parse('{"title":"API Specification","description":"","frontmatter":{},"headers":[],"relativePath":"api/index.md","lastUpdated":1692001131000}'),y={name:"api/index.md"},f=Object.assign(y,{setup(g){const{page:n}=o();return(A,b)=>(t(),a("div",null,[c,s("div",i,[d,u,s("p",null,[e("Please note this page was last updated on "),s("b",null,r(new Date(l(n).lastUpdated).toLocaleString()),1),e(".")])]),h]))}});export{F as __pageData,f as default};
